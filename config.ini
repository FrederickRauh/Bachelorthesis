[system]
;Which classifier to use
GMM = True
GMM_UBM = True
SVM = True

;Select which steps you want to take
EXTRACT_FEATURES = False
TRAIN_MODEL = False
PREDICT_SPEAKER = True

;GMM and GMMUBM are multipled by 5, to keep up with SVM performance
TRAINING_FILES = 10
;How many features have to be accepted

PROCESSES = 12
LOGLEVEL = 20
LOG = True
VERSION = local
ADD_EXTRA = False
; Comment this in to put data in a folder for the docker container to access. Mount with /source/dir:/dataset
;DATASET_PATH = /dataset
DATASET_PATH = E:\voxceleb\local

[gmm]
THRESHOLD = -52.5
G_THRESHOLD = 0.5
G_N_COMPONENTS = [16]
G_MAX_ITER = [200, 300, 400, 500]
G_COVARIANCE_TYPE = ["diag"]
G_N_INIT = [3 ,4, 5, 6]

[gmm-ubm]
;THRESHOLD = 0.98
;THRESHOLD = -1.97
;after training with bigger ubm  (50 ids)
THRESHOLD = 0.995
UBM_N_COMPONENTS = [1024]
UBM_MAX_ITER = [200, 300, 400, 500]
UBM_COVARIANCE_TYPE = ["diag"]
UBM_N_INIT = [3]

GMM_N_COMPONENTS = [16]
GMM_MAX_ITER = [200]
GMM_COVARIANCE_TYPE = ["diag"]
GMM_N_INIT = [3]


[svm]
; 0.25 maybe try higher
SVM_THRESHOLD = 0.175
KERNELS = ["rbf"]
C.upper = 5.1
C.lower = 1.0
GAMMA = ["auto", "scale"]

[features]
; Select with python lib should be used to extract features(psf or librosa)
FEATURE_TYPE = psf
APPENDENERGY = True
CEPLIFTER = 0
FMAX = None
FMIN = 0
NFFT = 2048
N_MELS = 26
N_MFCC = 20
PREEMPH = 0.97
SAMPLE_RATE = 16000
WINLEN = 0.025
WINSTEP = 0.01
WINFUNC = lambda x: np.hamming(x)

[modelconfig]
CV = 10
REFIT = True
VERBOSE = 2
N_JOBS = -2